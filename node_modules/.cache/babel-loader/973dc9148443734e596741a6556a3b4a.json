{"ast":null,"code":"var _jsxFileName = \"/Users/kich555/Desktop/Development/react/React-Practice/src/Button.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { darken, lighten } from 'polished';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorStyles = css`\n  ${({\n  theme,\n  color\n}) => {\n  const selected = theme.palette[color];\n  return css`\n      background: ${selected};\n      &:hover {\n        background: ${lighten(0.1, '#228be6')};\n      }\n      &:active {\n        background: ${darken(0.1, '#228be6')};\n      }\n    `;\n}}\n`;\nconst sizes = {\n  large: {\n    height: '3rem',\n    fontSize: '1.25rem'\n  },\n  medium: {\n    height: '2.25rem',\n    fontSize: '1rem'\n  },\n  small: {\n    height: '1.75rem',\n    fontSize: '0.875rem'\n  }\n};\nconst sizeStyles = css`\n  ${({\n  size\n}) => props.size === 'large' && css`\n      height: 3rem;\n      font-size: 1.25rem;\n    `}\n\n  ${props => props.size === 'medium' && css`\n      height: 2.25rem;\n      font-size: 1rem;\n    `}\n\n    ${props => props.size === 'small' && css`\n      height: 1.75rem;\n      font-size: 0.875rem;\n    `}\n`;\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  display: inline-flex;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  /* 크기 */\n  ${sizeStyles}\n\n  ${colorStyles}\n\n  /* 기타 */\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n_c = StyledButton;\n\nfunction Button({\n  children,\n  color,\n  size,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    color: color,\n    size: size,\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Button;\nButton.defaultProps = {\n  color: 'blue',\n  size: 'medium'\n};\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/kich555/Desktop/Development/react/React-Practice/src/Button.js"],"names":["React","styled","css","darken","lighten","colorStyles","theme","color","selected","palette","sizes","large","height","fontSize","medium","small","sizeStyles","size","props","StyledButton","button","Button","children","rest","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,UAAhC;;AAEA,MAAMC,WAAW,GAAGH,GAAI;AACxB,IAAI,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AACtB,QAAMC,QAAQ,GAAGF,KAAK,CAACG,OAAN,CAAcF,KAAd,CAAjB;AACA,SAAOL,GAAI;AACf,oBAAoBM,QAAS;AAC7B;AACA,sBAAsBJ,OAAO,CAAC,GAAD,EAAM,SAAN,CAAiB;AAC9C;AACA;AACA,sBAAsBD,MAAM,CAAC,GAAD,EAAM,SAAN,CAAiB;AAC7C;AACA,KARI;AASD,CAAC;AACJ,CAbA;AAeA,MAAMO,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADK;AAKZC,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE,SADF;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GALI;AASZE,EAAAA,KAAK,EAAE;AACLH,IAAAA,MAAM,EAAE,SADH;AAELC,IAAAA,QAAQ,EAAE;AAFL;AATK,CAAd;AAeA,MAAMG,UAAU,GAAGd,GAAI;AACvB,IAAI,CAAC;AAAEe,EAAAA;AAAF,CAAD,KACAC,KAAK,CAACD,IAAN,KAAe,OAAf,IACAf,GAAI;AACR;AACA;AACA,KAAM;AACN;AACA,IAAKgB,KAAD,IACAA,KAAK,CAACD,IAAN,KAAe,QAAf,IACAf,GAAI;AACR;AACA;AACA,KAAM;AACN;AACA,MAAOgB,KAAD,IACFA,KAAK,CAACD,IAAN,KAAe,OAAf,IACAf,GAAI;AACR;AACA;AACA,KAAM;AACN,CArBA;AAuBA,MAAMiB,YAAY,GAAGlB,MAAM,CAACmB,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIJ,UAAW;AACf;AACA,IAAIX,WAAY;AAChB;AACA;AACA;AACA;AACA;AACA,CArBA;KAAMc,Y;;AAuBN,SAASE,MAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAYf,EAAAA,KAAZ;AAAmBU,EAAAA,IAAnB;AAAyB,KAAGM;AAA5B,CAAhB,EAAoD;AAClD,sBACE,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEhB,KAArB;AAA4B,IAAA,IAAI,EAAEU,IAAlC;AAAA,OAA4CM,IAA5C;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQD,M;AAQTA,MAAM,CAACG,YAAP,GAAsB;AACpBjB,EAAAA,KAAK,EAAE,MADa;AAEpBU,EAAAA,IAAI,EAAE;AAFc,CAAtB;AAKA,eAAeI,MAAf","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst colorStyles = css`\n  ${({ theme, color }) => {\n    const selected = theme.palette[color];\n    return css`\n      background: ${selected};\n      &:hover {\n        background: ${lighten(0.1, '#228be6')};\n      }\n      &:active {\n        background: ${darken(0.1, '#228be6')};\n      }\n    `;\n  }}\n`;\n\nconst sizes = {\n  large: {\n    height: '3rem',\n    fontSize: '1.25rem',\n  },\n  medium: {\n    height: '2.25rem',\n    fontSize: '1rem',\n  },\n  small: {\n    height: '1.75rem',\n    fontSize: '0.875rem',\n  },\n};\n\nconst sizeStyles = css`\n  ${({ size }) =>\n    props.size === 'large' &&\n    css`\n      height: 3rem;\n      font-size: 1.25rem;\n    `}\n\n  ${(props) =>\n    props.size === 'medium' &&\n    css`\n      height: 2.25rem;\n      font-size: 1rem;\n    `}\n\n    ${(props) =>\n    props.size === 'small' &&\n    css`\n      height: 1.75rem;\n      font-size: 0.875rem;\n    `}\n`;\n\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  display: inline-flex;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  /* 크기 */\n  ${sizeStyles}\n\n  ${colorStyles}\n\n  /* 기타 */\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nfunction Button({ children, color, size, ...rest }) {\n  return (\n    <StyledButton color={color} size={size} {...rest}>\n      {children}\n    </StyledButton>\n  );\n}\n\nButton.defaultProps = {\n  color: 'blue',\n  size: 'medium',\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}