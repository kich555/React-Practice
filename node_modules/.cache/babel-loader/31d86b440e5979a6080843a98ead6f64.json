{"ast":null,"code":"var _jsxFileName = \"/Users/kich555/Desktop/Development/react/React-Practice/src/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction User({\n  user,\n  onRemove,\n  onToggle\n}) {\n  _s();\n\n  useEffect(() => {\n    // console.log('컴포넌트가 화면에 나타남');\n    console.log(user);\n  }); //   return () => {\n  //     console.log('컴포넌트가 화면에 사라짐');\n  //     console.log(user);\n  //   };\n  // }, [user]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      style: {\n        cursor: 'pointer',\n        color: user.active ? 'green' : null\n      },\n      onClick: () => onToggle(user.id),\n      children: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"(\", user.email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onRemove(user.id),\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(User, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = User;\n\nfunction UserList({\n  users,\n  onRemove,\n  onToggle\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(User, {\n      user: user,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_c2 = UserList;\nexport default UserList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"sources":["/Users/kich555/Desktop/Development/react/React-Practice/src/UserList.js"],"names":["React","useEffect","User","user","onRemove","onToggle","console","log","cursor","color","active","id","username","email","UserList","users","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAd,EAA4C;AAAA;;AAC1CJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAHQ,CAAT,CAD0C,CAK1C;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,MAAM,EAAE,SADH;AAELC,QAAAA,KAAK,EAAEN,IAAI,CAACO,MAAL,GAAc,OAAd,GAAwB;AAF1B,OADT;AAKE,MAAA,OAAO,EAAE,MAAML,QAAQ,CAACF,IAAI,CAACQ,EAAN,CALzB;AAAA,gBAOGR,IAAI,CAACS;AAPR;AAAA;AAAA;AAAA;AAAA,YADF,uBAWE;AAAA,sBAAQT,IAAI,CAACU,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAQ,MAAA,OAAO,EAAE,MAAMT,QAAQ,CAACD,IAAI,CAACQ,EAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3BQT,I;;KAAAA,I;;AA6BT,SAASY,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASX,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAlB,EAAiD;AAC/C,sBACE;AAAA,cACGU,KAAK,CAACC,GAAN,CAAWb,IAAD,iBACT,QAAC,IAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,QAAQ,EAAEC;AAJZ,OAEOF,IAAI,CAACQ,EAFZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAYD;;MAbQG,Q;AAeT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nfunction User({ user, onRemove, onToggle }) {\n  useEffect(() => {\n    // console.log('컴포넌트가 화면에 나타남');\n    console.log(user);\n  });\n  //   return () => {\n  //     console.log('컴포넌트가 화면에 사라짐');\n  //     console.log(user);\n  //   };\n  // }, [user]);\n\n  return (\n    <div>\n      <b\n        style={{\n          cursor: 'pointer',\n          color: user.active ? 'green' : null,\n        }}\n        onClick={() => onToggle(user.id)}\n      >\n        {user.username}\n      </b>\n      &nbsp;\n      <span>({user.email})</span>\n      <button onClick={() => onRemove(user.id)}>삭제</button>\n    </div>\n  );\n}\n\nfunction UserList({ users, onRemove, onToggle }) {\n  return (\n    <>\n      {users.map((user) => (\n        <User\n          user={user}\n          key={user.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}