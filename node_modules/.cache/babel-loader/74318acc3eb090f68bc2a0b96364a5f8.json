{"ast":null,"code":"var _jsxFileName = \"/Users/kich555/Desktop/Development/react/React-Practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Hello from './Hello';\nimport Wrapper from './wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'joan',\n    email: 'public.joan@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'jenson',\n    email: 'jenson@gmail.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'kin',\n    email: 'kin@gmail.com',\n    active: false\n  }]);\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    // 나중에 구현 할 배열에 항목 추가하는 로직\n    // ...\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([users.concat(user)]);\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  };\n\n  const onRemove = id => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // user.id 가 id인것을 제거함\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"x26D09PGb1td8vjQzNn+9AoRs1w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kich555/Desktop/Development/react/React-Practice/src/App.js"],"names":["React","useRef","useState","Hello","Wrapper","Counter","InputSample","CreateUser","UserList","App","inputs","setInputs","username","email","onChange","e","name","value","target","users","setUsers","id","active","nextId","onCreate","user","current","concat","onRemove","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AACnCU,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAApC;AAKA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBH,MAA5B;;AAEA,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACM,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,CACjC;AACEmB,IAAAA,EAAE,EAAE,CADN;AAEET,IAAAA,QAAQ,EAAE,MAFZ;AAGEC,IAAAA,KAAK,EAAE,uBAHT;AAIES,IAAAA,MAAM,EAAE;AAJV,GADiC,EAOjC;AACED,IAAAA,EAAE,EAAE,CADN;AAEET,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,KAAK,EAAE,kBAHT;AAIES,IAAAA,MAAM,EAAE;AAJV,GAPiC,EAajC;AACED,IAAAA,EAAE,EAAE,CADN;AAEET,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,KAAK,EAAE,eAHT;AAIES,IAAAA,MAAM,EAAE;AAJV,GAbiC,CAAD,CAAlC;AAqBA,QAAMC,MAAM,GAAGtB,MAAM,CAAC,CAAD,CAArB;;AAEA,QAAMuB,QAAQ,GAAG,MAAM;AACrB;AACA;AACA,UAAMC,IAAI,GAAG;AACXJ,MAAAA,EAAE,EAAEE,MAAM,CAACG,OADA;AAEXd,MAAAA,QAFW;AAGXC,MAAAA;AAHW,KAAb;AAMAO,IAAAA,QAAQ,CAAC,CAACD,KAAK,CAACQ,MAAN,CAAaF,IAAb,CAAD,CAAD,CAAR;AAEAd,IAAAA,SAAS,CAAC;AACRC,MAAAA,QAAQ,EAAE,EADF;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAD,CAAT;AAIAU,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB;AACD,GAhBD;;AAkBA,QAAME,QAAQ,GAAIP,EAAD,IAAQ;AACvB;AACA;AACAD,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAET,QADZ;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,QAAQ,EAAEU;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,KAAjB;AAAwB,MAAA,QAAQ,EAAES;AAAlC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD;;GA1EQnB,G;;KAAAA,G;AA4ET,eAAeA,GAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport Hello from './Hello';\nimport Wrapper from './wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\n\nfunction App() {\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: '',\n  });\n\n  const { username, email } = inputs;\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const [users, setUsers] = useState([\n    {\n      id: 1,\n      username: 'joan',\n      email: 'public.joan@gmail.com',\n      active: true,\n    },\n    {\n      id: 2,\n      username: 'jenson',\n      email: 'jenson@gmail.com',\n      active: false,\n    },\n    {\n      id: 3,\n      username: 'kin',\n      email: 'kin@gmail.com',\n      active: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    // 나중에 구현 할 배열에 항목 추가하는 로직\n    // ...\n    const user = {\n      id: nextId.current,\n      username,\n      email,\n    };\n\n    setUsers([users.concat(user)]);\n\n    setInputs({\n      username: '',\n      email: '',\n    });\n    nextId.current += 1;\n  };\n\n  const onRemove = (id) => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // user.id 가 id인것을 제거함\n    setUsers(users.filter((user) => user.id !== id));\n  };\n\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}