{"ast":null,"code":"var _jsxFileName = \"/Users/kich555/Desktop/Development/react/React-Practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Hello from './Hello';\nimport Wrapper from './wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const users = [{\n    id: 1,\n    username: 'joan',\n    email: 'public.joan@gmail.com'\n  }, {\n    id: 2,\n    username: 'jenson',\n    email: 'jenson@gmail.com'\n  }, {\n    id: 3,\n    username: 'kin',\n    email: 'kin@gmail.com'\n  }];\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    // 나중에 구현 할 배열에 항목 추가하는 로직\n    // ...\n    nextId.current += 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"8Ki10oRx7tglSX8xsQD9cibzOZw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kich555/Desktop/Development/react/React-Practice/src/App.js"],"names":["React","useRef","Hello","Wrapper","Counter","InputSample","CreateUser","UserList","App","users","id","username","email","nextId","onCreate","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,MAFZ;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADY,EAMZ;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,KAAK,EAAE;AAHT,GANY,EAWZ;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAXY,CAAd;AAkBA,QAAMC,MAAM,GAAGZ,MAAM,CAAC,CAAD,CAArB;;AAEA,QAAMa,QAAQ,GAAG,MAAM;AACrB;AACA;AACAD,IAAAA,MAAM,CAACE,OAAP,IAAkB,CAAlB;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useRef } from 'react';\nimport Hello from './Hello';\nimport Wrapper from './wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\n\nfunction App() {\n  const users = [\n    {\n      id: 1,\n      username: 'joan',\n      email: 'public.joan@gmail.com',\n    },\n    {\n      id: 2,\n      username: 'jenson',\n      email: 'jenson@gmail.com',\n    },\n    {\n      id: 3,\n      username: 'kin',\n      email: 'kin@gmail.com',\n    },\n  ];\n\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    // 나중에 구현 할 배열에 항목 추가하는 로직\n    // ...\n    nextId.current += 1;\n  };\n\n  return (\n    <>\n      <CreateUser />\n      <UserList users={users} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}