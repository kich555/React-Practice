{"ast":null,"code":"var _jsxFileName = \"/Users/kich555/Desktop/Development/react/React-Practice/src/InputSample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputSample() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    id: '',\n    pw: ''\n  });\n  const {\n    id,\n    pw\n  } = inputs; // 비구조화 할당을 통해 값 추출\n\n  const onChange = e => {\n    const {\n      value,\n      id\n    } = e.target; // 우선 e.target 에서 name 과 value 를 추출\n\n    setInputs({ ...inputs,\n      // 기존의 input 객체를 복사한 뒤\n      [id]: value // name 키를 가진 값을 value 로 설정\n\n    });\n    console.log(id);\n    console.log(pw);\n  };\n\n  const onReset = () => {\n    setInputs({\n      id: '',\n      pw: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"id\",\n      placeholder: \"\\uC774\\uB984\",\n      onChange: onChange,\n      value: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"pw\",\n      placeholder: \"\\uB2C9\\uB124\\uC784\",\n      onChange: onChange,\n      value: pw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uAC12: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), id, \" (\", pw, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSample, \"BtOEkTaSLxWP80p3/KOiH1pVpxQ=\");\n\n_c = InputSample;\nexport default InputSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSample\");","map":{"version":3,"sources":["/Users/kich555/Desktop/Development/react/React-Practice/src/InputSample.js"],"names":["React","useState","InputSample","inputs","setInputs","id","pw","onChange","e","value","target","console","log","onReset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AACnCI,IAAAA,EAAE,EAAE,EAD+B;AAEnCC,IAAAA,EAAE,EAAE;AAF+B,GAAD,CAApC;AAKA,QAAM;AAAED,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAaH,MAAnB,CANqB,CAMM;;AAE3B,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAM;AAAEC,MAAAA,KAAF;AAASJ,MAAAA;AAAT,QAAgBG,CAAC,CAACE,MAAxB,CADsB,CACU;;AAChCN,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AACG;AACX,OAACE,EAAD,GAAMI,KAFE,CAEI;;AAFJ,KAAD,CAAT;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACD,GARD;;AAUA,QAAMO,OAAO,GAAG,MAAM;AACpBT,IAAAA,SAAS,CAAC;AACRC,MAAAA,EAAE,EAAE,EADI;AAERC,MAAAA,EAAE,EAAE;AAFI,KAAD,CAAT;AAID,GALD;;AAQA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,WAAW,EAAC,cAA7B;AAAkC,MAAA,QAAQ,EAAEC,QAA5C;AAAsD,MAAA,KAAK,EAAEF;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,WAAW,EAAC,oBAA7B;AAAmC,MAAA,QAAQ,EAAEE,QAA7C;AAAuD,MAAA,KAAK,EAAED;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGR,EAFH,QAESC,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArCQJ,W;;KAAAA,W;AAuCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction InputSample() {\n  const [inputs, setInputs] = useState({\n    id: '',\n    pw: ''\n  });\n\n  const { id, pw } = inputs; // 비구조화 할당을 통해 값 추출\n\n  const onChange = (e) => {\n    const { value, id } = e.target; // 우선 e.target 에서 name 과 value 를 추출\n    setInputs({\n      ...inputs, // 기존의 input 객체를 복사한 뒤\n      [id]: value // name 키를 가진 값을 value 로 설정\n    });\n    console.log(id);\n    console.log(pw);\n  };\n\n  const onReset = () => {\n    setInputs({\n      id: '',\n      pw: '',\n    })\n  };\n\n\n  return (\n    <div>\n      <input name=\"id\" placeholder=\"이름\" onChange={onChange} value={id} />\n      <input name=\"pw\" placeholder=\"닉네임\" onChange={onChange} value={pw}/>\n      <button onClick={onReset}>초기화</button>\n      <div>\n        <b>값: </b>\n        {id} ({pw})\n      </div>\n    </div>\n  );\n}\n\nexport default InputSample;"]},"metadata":{},"sourceType":"module"}